name: "Receive Pull Request"

on:
  workflow_dispatch:
    inputs:
      pr_number:
        type: number
        required: true
  pull_request:
    types:
      [opened, synchronize, reopened]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-pr:
    name: "Record PR number"
    if: ${{ github.event.action != 'closed' }}
    runs-on: ubuntu-22.04
    outputs:
      is_valid: ${{ steps.check-pr.outputs.VALID }}
    steps:
      - name: "Record PR number (for PR automatic trigger)"
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo ${{ github.event.number }} > ${{ github.workspace }}/NR # 2022-03-02: artifact name fixed to be NR
          echo "NR=${{ github.event.number }}" >> $GITHUB_ENV
      - name: "Pass PR number (for manual trigger)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo ${{ inputs.pr_number }} > ${{ github.workspace }}/NR
          echo "NR=${{ inputs.pr_number }}" >> $GITHUB_ENV
      - name: "Upload PR number"
        id: upload
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: pr
          path: ${{ github.workspace }}/NR
      - name: "Get Invalid Hashes File"
        id: hash
        run: |
          echo "json<<EOF
          $(curl -sL https://files.carpentries.org/invalid-hashes.json)
          EOF" >> $GITHUB_OUTPUT
      - name: "echo output"
        run: |
          echo "${{ steps.hash.outputs.json }}"
      - name: "Check PR"
        id: check-pr
        uses: carpentries/actions/check-valid-pr@main
        with:
          pr: ${{ env.NR }}
          invalid: ${{ fromJSON(steps.hash.outputs.json)[github.repository] }}

  build-md-source:
    name: "Build markdown source files if valid"
    needs: test-pr
    runs-on: ubuntu-22.04
    if: ${{ needs.test-pr.outputs.is_valid == 'true' }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RENV_PATHS_ROOT: ~/.local/share/renv/
      CHIVE: ${{ github.workspace }}/site/chive
      PR: ${{ github.workspace }}/site/pr
      MD: ${{ github.workspace }}/site/built
    steps:
      - name: "Record PR number (for PR automatic trigger)"
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "NR=${{ github.event.number }}" >> $GITHUB_ENV

      - name: "Pass PR number (for manual trigger)"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "NR=${{ inputs.pr_number }}" >> $GITHUB_ENV

      - name: "Get branch if manual trigger"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "PR_BRANCH=$(gh -R ${{ github.repository }} pr view ${{ env.NR }} --json headRefName --jq '.headRefName')" >> $GITHUB_ENV

      - name: "Check Out Main Branch"
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4

      - name: "Checkout Out Main Branch"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ env.PR_BRANCH }}

      - name: "Check Out Staging Branch"
        uses: actions/checkout@v4
        with:
          ref: md-outputs
          path: ${{ env.MD }}

      - name: "Set up R"
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          install-r: false

      - name: "Set up Pandoc"
        uses: r-lib/actions/setup-pandoc@v2

      - name: "Setup Lesson Engine"
        uses: carpentries/actions/setup-sandpaper@main
        with:
          cache-version: ${{ secrets.CACHE_VERSION }}

      - name: "Setup Package Cache"
        uses: carpentries/actions/setup-lesson-deps@main
        with:
          cache-version: ${{ secrets.CACHE_VERSION }}

      - name: "Validate and Build Markdown"
        id: build-site
        run: |
          sandpaper::package_cache_trigger(TRUE)
          sandpaper::validate_lesson(path = '${{ github.workspace }}')
          sandpaper:::build_markdown(path = '${{ github.workspace }}', quiet = FALSE)
        shell: Rscript {0}

      - name: "Generate Artifacts"
        if: ${{ github.event_name == 'pull_request' }}
        id: generate-artifacts
        run: |
          sandpaper:::ci_bundle_pr_artifacts(
            repo         = '${{ github.repository }}',
            pr_number    = '${{ github.event.number }}',
            path_md      = '${{ env.MD }}',
            path_pr      = '${{ env.PR }}',
            path_archive = '${{ env.CHIVE }}',
            branch       = 'md-outputs'
          )
        shell: Rscript {0}

      - name: "Generate Artifacts"
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          sandpaper:::ci_bundle_pr_artifacts(
            repo         = '${{ github.repository }}',
            pr_number    = '${{ inputs.pr_number }}',
            path_md      = '${{ env.MD }}',
            path_pr      = '${{ env.PR }}',
            path_archive = '${{ env.CHIVE }}',
            branch       = 'md-outputs'
          )
        shell: Rscript {0}

      - name: "Upload PR"
        uses: actions/upload-artifact@v4
        with:
          name: pr
          path: ${{ env.PR }}
          overwrite: true

      - name: "Upload Diff"
        uses: actions/upload-artifact@v4
        with:
          name: diff
          path: ${{ env.CHIVE }}
          retention-days: 1

      - name: "Upload Build"
        uses: actions/upload-artifact@v4
        with:
          name: built
          path: ${{ env.MD }}
          retention-days: 1

      - name: "Teardown"
        run: sandpaper::reset_site()
        shell: Rscript {0}
